#include <ChibiOS.h>
#include <util/atomic.h>

static WORKING_AREA(waThread1, 64);

static msg_t Thread1(void *arg) {
  int i;
  pinMode(11, OUTPUT);
  while (TRUE) {
    digitalWrite(11, HIGH);
    chThdSleepMilliseconds(400);
    digitalWrite(11, LOW);
    chThdSleepMilliseconds(400);
  }
  return 0;
}

static WORKING_AREA(waThread2, 64);

static msg_t Thread2(void *arg) {
  pinMode(12, OUTPUT);  while (TRUE) {
    digitalWrite(12, HIGH);
    chThdSleepMilliseconds(1000);
    digitalWrite(12, LOW);
    chThdSleepMilliseconds(1000);
  }
  return 0;
}

void setup() {
  cli();
  halInit();
  chSysInit();
  
  chThdCreateStatic(waThread1, sizeof(waThread1),
    NORMALPRIO, Thread1, NULL);
  chThdCreateStatic(waThread2, sizeof(waThread2),
    NORMALPRIO, Thread2, NULL);
}

void loop() {
  chThdSleepMilliseconds(99999);
}



declareTaskLoop(T1);
declareTaskLoop(T2);
declareTaskLoop(T3);

int c = 0;
int i = 0;
taskLoop (T1)
{
  digitalWrite(11, HIGH);
  delay(400);
  digitalWrite(11, LOW);
  delay(400);
}

taskLoop (T2)
{
  digitalWrite(12, HIGH);
  delay(1000);
  digitalWrite(12, LOW);
  delay(1000);
}

taskLoop (T3)
{
  delay(77);
  Serial.print(c++);
}

void setup()   {                Serial.begin(9600);
  pinMode(11, OUTPUT);
  pinMode(12, OUTPUT);

  createTaskLoop(T1, NORMAL_PRIORITY);
  createTaskLoop(T2, NORMAL_PRIORITY);
  createTaskLoop(T3, NORMAL_PRIORITY);
}

void loop()                     {
  delay(999999);
}




_pinMode(11, _OUTPUT);
_pinMode(12, _OUTPUT);

_Serial.begin(9600);

par do
    loop do
        _digitalWrite(11, _HIGH);
        await 400ms;
        _digitalWrite(11, _LOW);
        await 400ms;
    end
with
    loop do
        _digitalWrite(12, _HIGH);
        await 1s;
        _digitalWrite(12, _LOW);
        await 1s;
    end
with
    int c = 0;
    loop do
        await 77ms;
        c = c + 1;
        _Serial.print(c);
    end
end
~                                                                                                                                                            
~                                                                                                                                                            
~                                                                                                                                                            
~                                                                                                                                                            
~                                          
